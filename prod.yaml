version: "3.8"
services:
  nginx:
    image: "${APP_NAME}-loadbalancer/php:beta-${APP_PHP_VERSION:-8.2}-unit"
    pull_policy: build

    environment:
      AUTORUN_LARAVEL_STORAGE_LINK: false
      AUTORUN_LARAVEL_MIGRATION: true
      AUTORUN_ENABLED: true
      SSL_MODE: "off"
      PHP_OPCACHE_ENABLE: 1
      PHP_FPM_POOL_NAME: "ekartar_php"

    build:
      context: .
      args:
        USER_ID: ${UID}
        GROUP_ID: ${GID}
      dockerfile_inline: |
        FROM serversideup/php:beta-8.2-unit as base

        ############################################
        # Development Image
        ############################################
        FROM base as development

        # Switch to root so we can do root things
        USER root

        ARG USER_ID
        ARG GROUP_ID

        # Use the build arguments to change the UID 
        # and GID of www-data while also changing 
        # the file permissions for NGINX
        RUN docker-php-serversideup-set-id www-data $USER_ID:$GROUP_ID

        RUN apt-get update && apt-get install -y \
          curl \
          postgresql-client

        RUN install-php-extensions gmp
        RUN install-php-extensions intl

        USER www-data

        COPY --chown=www-data:www-data . /var/www/html

        RUN composer install --no-interaction --prefer-dist --no-scripts \
        && composer dump-autoload --optimize \
        && chown -R www-data:www-data /var/www/html
    env_file:
      - .env.prod
    depends_on:
      - postgres
    networks:
      - eKartar
      - cloudflared #80

  horizon:
    image: "${APP_NAME}-cli/app:beta-${APP_PHP_VERSION:-8.2}-cli"
    pull_policy: build
    environment:
      PHP_FPM_POOL_NAME: "ekartar_horizon"

    env_file:
      - .env.prod

    build:
      context: .
      args:
        USER_ID: ${UID}
        GROUP_ID: ${GID}
      dockerfile_inline: |
        FROM serversideup/php:beta-8.2-cli as base

        ############################################
        # Development Image
        ############################################
        FROM base as development

        # Switch to root so we can do root things
        USER root

        ARG USER_ID
        ARG GROUP_ID

        # Use the build arguments to change the UID 
        # and GID of www-data while also changing 
        # the file permissions for NGINX
        RUN docker-php-serversideup-set-id www-data $USER_ID:$GROUP_ID

        RUN apt-get update && apt-get install -y \
          curl \
          postgresql-client

        RUN install-php-extensions gmp
        RUN install-php-extensions intl
        RUN docker-php-serversideup-dep-install-debian gosu

        USER www-data

        COPY --chown=www-data:www-data . /var/www/html

        RUN composer install --no-interaction --prefer-dist --no-scripts \
        && composer dump-autoload --optimize \
        && chown -R www-data:www-data /var/www/html
    command: ["gosu", "www-data", "/usr/local/bin/php", "artisan", "horizon"]
    depends_on:
      - postgres
    networks:
      - eKartar
      - cloudflared

  scheduler:
    image: "${APP_NAME}-cli/app:beta-${APP_PHP_VERSION:-8.2}-cli"
    pull_policy: build
    environment:
      PHP_FPM_POOL_NAME: "ekartar_task"

    env_file:
      - .env.prod

    build:
      context: .
      args:
        USER_ID: ${UID}
        GROUP_ID: ${GID}
      dockerfile_inline: |
        FROM serversideup/php:beta-8.2-cli as base

        ############################################
        # Development Image
        ############################################
        FROM base as development

        # Switch to root so we can do root things
        USER root

        ARG USER_ID
        ARG GROUP_ID

        # Use the build arguments to change the UID 
        # and GID of www-data while also changing 
        # the file permissions for NGINX
        RUN docker-php-serversideup-set-id www-data $USER_ID:$GROUP_ID

        RUN apt-get update && apt-get install -y \
          curl \
          postgresql-client

        RUN install-php-extensions gmp
        RUN install-php-extensions intl
        RUN docker-php-serversideup-dep-install-debian gosu

        USER www-data

        COPY --chown=www-data:www-data . /var/www/html

        RUN composer install --no-interaction --prefer-dist --no-scripts \
        && composer dump-autoload --optimize \
        && chown -R www-data:www-data /var/www/html
    command:
      ["gosu", "www-data", "/usr/local/bin/php", "artisan", "schedule:work"]

    depends_on:
      - postgres
    networks:
      - eKartar

  redis:
    image: "redis:alpine"
    volumes:
      - "redis:/data"
    networks:
      - eKartar
      - cloudflared
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      retries: 3
      timeout: 5s

  postgres:
    image: postgres:13
    ports:
      - 5436:5432
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    networks:
      - eKartar
      - cloudflared
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test:
        ["CMD-SHELL", "sh -c 'pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}'"]
      interval: 10s
      timeout: 3s
      retries: 3

  tunnel:
    image: cloudflare/cloudflared
    restart: unless-stopped
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=eyJhIjoiNjc3MWViZGVhMGY3Y2M5N2E2YmI4NGU4NzJjNjI1MWUiLCJ0IjoiN2IwZTczNjUtYWY2MS00OTFiLWEwMTEtZWJiMmZlODQyYTNlIiwicyI6Ik56TmtaVGd4TkRZdE1XVXdPUzAwTkRGaUxUaG1Nek10T1dJME1HUmhOakpsT0dZMyJ9
    networks:
      - cloudflared

networks:
  eKartar:
  cloudflared:
    external: true
volumes:
  db_data:
  redis:
  cache:
    driver: local
